/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useBox } from "@react-three/cannon";

export default function Model({ ...props }) {
  const { nodes, materials } = useGLTF("/stair,mirror.glb");
  const position = [-9.1, 0.5, 4.4];
  const rotation = [0, Math.PI / 2, 0];
  const [ref1] = useBox(() => ({
    type: "Static",
    position: [-9.1, 0.5, 2.4],
    rotation,
    args: [1, 2, 8],
    ...props,
  }));
  const [ref2] = useBox(() => ({
    type: "Static",
    position: [-9.1, 2.5, 2.4],
    rotation,
    args: [1, 1, 8],
    ...props,
  }));
  return (
    <group
      {...props}
      dispose={null}
      position={position}
      rotation={rotation}
      scale={0.07}
    >
      <mesh
        geometry={nodes.group_0.geometry}
        material={materials.material}
        position={[6.12, 0, 68.28]}
        scale={[0.37, 0.57, 0.72]}
      />
      <mesh
        geometry={nodes.group_2.geometry}
        material={materials._0009_Linen}
        position={[56.32, 35.75, 40.72]}
        scale={0.47}
      />
      <mesh ref={ref1} />
      <mesh ref={ref2} />
    </group>
  );
}

useGLTF.preload("/stair,mirror.glb");
